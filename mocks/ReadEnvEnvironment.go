// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ReadEnvEnvironment is an autogenerated mock type for the ReadEnvEnvironment type
type ReadEnvEnvironment struct {
	mock.Mock
}

// FileExist provides a mock function with given fields: filename
func (_m *ReadEnvEnvironment) FileExist(filename string) bool {
	ret := _m.Called(filename)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(filename)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Getenv provides a mock function with given fields: key
func (_m *ReadEnvEnvironment) Getenv(key string) string {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Load provides a mock function with given fields: filenames
func (_m *ReadEnvEnvironment) Load(filenames ...string) error {
	_va := make([]interface{}, len(filenames))
	for _i := range filenames {
		_va[_i] = filenames[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(...string) error); ok {
		r0 = rf(filenames...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewReadEnvEnvironment interface {
	mock.TestingT
	Cleanup(func())
}

// NewReadEnvEnvironment creates a new instance of ReadEnvEnvironment. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReadEnvEnvironment(t mockConstructorTestingTNewReadEnvEnvironment) *ReadEnvEnvironment {
	mock := &ReadEnvEnvironment{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
